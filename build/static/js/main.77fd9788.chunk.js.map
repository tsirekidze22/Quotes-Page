{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","styles","header","logo","nav","to","activeClassName","active","Layout","children","main","QuoteItem","props","classes","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAcending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","Card","card","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","loadedComments","useParams","addedCommentHandler","HighlightedQuote","QuoteDetails","params","match","useRouteMatch","path","exact","url","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.77fd9788.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1pyHR\",\"logo\":\"MainNavigation_logo__1Olfs\",\"nav\":\"MainNavigation_nav__2WRij\",\"active\":\"MainNavigation_active__KY03l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1NBqu\",\"loading\":\"QuoteForm_loading__2NWWk\",\"control\":\"QuoteForm_control__1nerp\",\"actions\":\"QuoteForm_actions__20ZKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__S2_1S\",\"loading\":\"NewCommentForm_loading__BVKzV\",\"control\":\"NewCommentForm_control__19A4K\",\"actions\":\"NewCommentForm_actions__QOlxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__384oK\",\"sorting\":\"QuoteList_sorting__3uAMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1bAQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1z-o8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2uZ_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2SGVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1PtzM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2fLDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__njxGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3GKKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3--0w\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.logo}>Great Quotes</div>\r\n      <nav className={styles.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={styles.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={styles.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={styles.main}>{children}</main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAcending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAcending);\n\n  const changeSortHandler = () => {\n    history.push(\n      `${location.pathname}?sort=` + (isSortingAcending ? \"desc\" : \"asc\")\n    );\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          Sort {isSortingAcending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://quotesproject-7b934-default-rtdb.europe-west1.firebasedatabase.app\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\"> {error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={loadedQuotes} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={() => setIsEntering(false)} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <QuoteForm\r\n        isLoading={status === \"pending\"}\r\n        onAddQuote={addQuoteHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div className=\"centered\">404 - Page Not Found!</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  const params = useParams();\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = ({ text, author }) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{text}</p>\n      <figcaption>{author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p className=\"centered\">No Quote Found!</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetails />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}